
@{
    ViewBag.Title = "Edit Profile";
}
@await Html.PartialAsync("_RfidPopup")
@{
    var userName = Context.Session.GetString("UserName");
    var studentId = Context.Session.GetString("StudentId");
    var course = Context.Session.GetString("Course");
    var email = Context.Session.GetString("Email");
    var contactNum = Context.Session.GetString("ContactNumber");
    var profilePicUrl = ViewBag.ProfilePicUrl;
}

@if (!string.IsNullOrEmpty(userName))
{
    <h2 style = "display: none;">Welcome, @userName</h2>
}
else
{
    <h2 style = "display: none;">Please log in to continue.</h2>
    <script>
        window.location.href = '@Url.Action("Input", "Account")';
    </script>
}

<style>
    body {
        margin: 0;
        padding: 0;
        background-image: url('/images/PLM-HOME.png');
        background-size: cover;
        background-repeat: no-repeat;
        background-position: center;
        min-height: 100vh;
        display: block;
        justify-content: center;
        align-items: center;
    }
    /* Add these new styles for the popup */
    .popup-overlay {
        display: none;
        position: fixed;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        z-index: 9999;
        justify-content: center;
        align-items: center;
    }

    .popup-content {
        background-color: white;
        padding: 30px;
        border-radius: 10px;
        text-align: center;
        max-width: 400px;
        width: 90%;
        position: relative;
        font-family: 'PoppinsMedium';
    }

    .popup-content h2 {
        color: #ff4444;
        margin-bottom: 20px;
        font-size: 24px;
    }

    .popup-content p {
        margin-bottom: 20px;
        font-size: 18px;
    }

    .popup-button {
        background-color: #4a73e5;
        color: white;
        border: none;
        padding: 10px 20px;
        border-radius: 5px;
        cursor: pointer;
        font-size: 16px;
        font-weight: bold;
    }

    .popup-button:hover {
        background-color: #3557b7;
    }

    .navbar-menu {
        display: flex;
        gap: 50px;
        align-items: center;
        position: absolute;
        top: 2em;
        z-index: 998;
        left: 50.5em;
    }

    .navbar-menu a {
        text-decoration: none;
        color: #2e2c2b;
        font-family: 'MontserratSemiBold';
        font-size: 20px;
        font-weight: bold;
        transition: color 0.3s ease;
    }

    .navbar-menu .highlight {
        color: #DAA520;
        font-size: 28px;
        font-family: 'MontserratSemiBold';
    }

    .navbar-menu a:hover {
        color: #DAA520;
    }

    /* Card Styling */
    .profile-page {
        display: flex;
        justify-content: center;
        align-items: center;
        flex-direction: column;
    }
    .card-container {
        width: 90%;
        background-color: #ffffff;
        border-radius: 35px;
        padding: 20px;
        margin-top: 50px;
        box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);
        border: 1px solid #a9a7a7;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        height: 70vh;
    }
    .card-contenter {
        display: flex;
        flex-direction: column;
    }
    .card-content {
        display: flex;
        flex-direction: row;
        align-items: flex-start;
        justify-content: flex-start;
        transform: scale(1.2);
        margin-top: -2em;
    }
    .card-title h1 {
        color: #A52A2A;
        font-family: "PoppinsMedium";
        font-size: 42px;
        font-weight: bold;
        text-align: center;
        width: 100%;
        margin-top: -1.5em;
        margin-bottom: 1em;
    }
    .profile-pic {
        width: 15em;
        height: 15em;
        border-radius: 10px;
        background-color: #e0e0e0;
        display: flex;
        align-items: center;
        justify-content: center;
        border: 2px solid black;
        margin-right: 43px;
        margin-top: 1.9em;
        margin-left: 1.6em;
    }
    .profile-pic img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        border-radius: 10px;
    }
    .info {
        font-family: 'PoppinsMedium';
        line-height: 1.5;
        width: calc(100% - 330px);
    }
    .info h2 {
        margin-top: 40px;
        font-size: 30px;
        font-weight: bold;
        font-family: 'PoppinsMedium';
    }

    .info p {
        margin: 12px 0;
        font-size: 18px;
        display: flex;
        align-items: center;
    }

    .info label {
        flex-shrink: 0;
        width: 12em;
        font-weight: bold;
    }

    #inputField {
        padding: 5px;
        font-size: 18px;
        border: 1px solid #ccc;
        margin-left: 30px;
        border-radius: 5px;
        font-family: 'PoppinsMedium';
        width: 18em;
    }
    .back-button {
        padding: 5px 28px;
        background-color: #ff4444;
        color: white;
        border: none;
        border-radius: 24px;
        font-family: 'PoppinsMedium';
        font-weight: bold;
        cursor: pointer;
        text-align: center;
        text-decoration: none;
        position: relative;
        font-size: 24px;
        top: 2.5em;
        width: 6em;
        margin-left: .5em;
    }

    .save-info-button {
        padding: 5px 28px;
        background-color: #4a73e5;
        color: white;
        border: none;
        border-radius: 24px;
        font-family: 'PoppinsMedium';
        font-weight: bold;
        cursor: pointer;
        text-align: center;
        text-decoration: none;
        position: relative;
        font-size: 24px;
        top: 2.5em;
        width: 6em
    }
    .save-info{
        position: fixed;
        right: 15.7em;
        margin-top: -1.5em;
    }
    input[type="number"]::-webkit-outer-spin-button,
    input[type="number"]::-webkit-inner-spin-button {
        -webkit-appearance: none;
        margin: 0;
    }

    input[type="number"] {
        -moz-appearance: textfield; /* Firefox */
    }
    .upload-btn{
        position: fixed;
    }

    /* Style the custom label to act as the file upload button */
    .custom-file-upload {
        display: flex;
        padding: 5px;
        background-color: #4CAF50;
        color: white;
        border-radius: 5px;
        cursor: pointer;
        position: fixed;
        justify-content: center;
        left: 2.15em;
        margin-top: 1em;
    }

    /* Hover effect for the button */
    .custom-file-upload:hover {
        background-color: #45a049;
    }

    /* Optional: Style the text input that shows the file name after the user selects a file */
    .upload-btn:valid {
        display: flex;
        position: fixed;
        left: 7.5em;
        margin-top: 1em;
        width: 20em;
    }
</style>

<div class="navbar-menu">
    <a href="Welcome">HOME</a>
    <a href="Return">RETURN</a>
    <a href="#" onclick="showRfidPopup()" >BORROW</a>
    <a href="Search">SEARCH</a>
    <a href="Profile" class="highlight">PROFILE</a>
</div>

<body>
    <!-- Add this right after your <body> tag -->
    <div id="errorPopup" class="popup-overlay">
        <div class="popup-content">
            <h2>Error</h2>
            <p id="errorMessage">Invalid credentials. User already exists.</p>
            <button class="popup-button" onclick="closePopup()">OK</button>
        </div>
    </div>

    <div class="profile-page">
        <!-- Student Information Card -->
        <div class="card-container">
            <form id="editProfileForm" method="post" action="@Url.Action("EditProfile", "Account")" enctype="multipart/form-data">
                <div class="card-contenter">
                    <div class="card-title">
                        <h1 class="edit-info-text">Edit Information</h1>
                    </div>
                    <div class="card-content">
                        <div class="profile-pic">
                            <!-- Display the current profile picture if available, else use a default image -->
                            <img src="@(!string.IsNullOrEmpty(ViewBag.ProfilePicUrl) ? ViewBag.ProfilePicUrl : "~/images/pfp.png")" alt="Profile Picture" width="auto" height="200" style="border-radius: 10px;">
                        </div>
                        <div class="info">
                            <h2>@userName</h2>
                            <input type="hidden" name="Name" value="@userName" />
                            
                            <p>
                                <label>Student ID:</label>
                                <input type="number" name="StudentNumber" class="editable-field" id="inputField" value="@studentId" required>
                            </p>
                            <p>
                                <label>Course:</label>
                                <input type="text" name="Course" class="editable-field" id="inputField" value="@course" required>
                            </p>
                            <p>
                                <label>PLM Email:</label>
                                <input type="email" name="Email" class="editable-field" id="inputField" value="@email" required>
                            </p>
                            <p>
                                <label>Contact Number:</label>
                                <input type="number" name="ContactNumber" class="editable-field" id="inputField" value="@contactNum" required>
                            </p>

                            <!-- Profile Picture Upload Section -->
                            <p>
                                <input type="file" name="profilePicture" id="profilePic" accept="image/*" class="upload-btn" />
                                <label for="profilePic" class="custom-file-upload">Choose a file</label>
                            </p>
                        </div>
                    </div>
                </div>
                <div class="save-info">
                    <button type="submit" class="save-info-button">Save</button>
                    <button type="button" class="back-button" onclick="window.history.back()">Back</button>
                </div>
            </form>

        </div>
    </div>

    <script>
        function showPopup(message) {
            document.getElementById('errorMessage').textContent = message;
            document.getElementById('errorPopup').style.display = 'flex';
        }

        function closePopup() {
            document.getElementById('errorPopup').style.display = 'none';
        }

        document.getElementById('editProfileForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            const formData = new FormData(this);
            
            fetch('@Url.Action("EditProfile", "Account")', {
                method: 'POST',
                // Remove the Content-Type header to let the browser set it with the boundary parameter
                body: formData // Send FormData directly instead of converting to JSON
            })
            .then(response => {
                if (response.ok) {
                    if (response.headers.get("content-type")?.includes("application/json")) {
                        return response.json().then(data => {
                            // Update profile picture if a new URL was returned
                            if (data.profilePicUrl) {
                                const profilePicElement = document.querySelector('.profile-pic img');
                                if (profilePicElement) {
                                    profilePicElement.src = data.profilePicUrl;
                                }
                            }
                            window.location.href = '@Url.Action("Profile", "Account")';
                        });
                    } else {
                        window.location.href = '@Url.Action("Profile", "Account")';
                    }
                } else {
                    return response.json().then(data => {
                        showPopup(data.message || 'Failed to update profile. Please try again.');
                    });
                }
            })
            .catch(error => {
                console.error('Error:', error);
                showPopup('An error occurred while updating the profile.');
            });
        });

        // Close popup when clicking outside
        document.getElementById('errorPopup').addEventListener('click', function(e) {
            if (e.target === this) {
                closePopup();
            }
        });
    </script>
</body>